name: Manual Deploy to Production

on:
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message/reason'
        required: true
        default: 'QA approved - deploying to production'
        type: string

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout test-repo code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Display deployment info
        run: |
          echo "=========================================="
          echo "Manual Deployment to Production"
          echo "=========================================="
          echo "Message: ${{ inputs.deploy_message }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Deploying to: prod-repo"
          echo "=========================================="

      - name: Clone prod-repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git clone https://${{ secrets.PROD_REPO_PAT }}@github.com/${{ github.repository_owner }}/prod-repo.git prod-repo-temp

      - name: Copy files to prod-repo
        run: |
          # Remove .git directory to avoid copying git history
          rm -rf .git
          # Copy all files except the prod-repo-temp directory itself
          rsync -av --exclude='prod-repo-temp' --exclude='.github' . prod-repo-temp/
          # Copy only necessary workflow files if needed
          # mkdir -p prod-repo-temp/.github/workflows

      - name: Commit and push to prod-repo
        run: |
          cd prod-repo-temp
          git add .
          git diff --staged --quiet || git commit -m "Deploy from test-repo: ${{ inputs.deploy_message }} (by ${{ github.actor }})"
          git push origin main

      - name: Deployment summary
        run: |
          echo "âœ… Successfully deployed to prod-repo!"
          echo "Deployment message: ${{ inputs.deploy_message }}"
          echo "Triggered by: ${{ github.actor }}"
